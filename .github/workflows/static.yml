name: Build and Deploy Static Site

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: '18'
  #         cache: 'npm'

  #     - name: Install dependencies
  #       run: npm ci --prefer-offline

  #     - name: Run ESLint
  #       run: npm run lint

  build-cv:
    # needs: [lint]
    if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.modified, 'cv/cv.tex')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache LaTeX packages
        id: cache-latex
        uses: actions/cache@v3
        with:
          path: /usr/share/texlive
          key: texlive-${{ runner.os }}-${{ hashFiles('cv/cv.tex') }}

      - name: Install LaTeX
        if: steps.cache-latex.outputs.cache-hit != 'true'
        run: sudo apt-get install -y texlive-latex-base texlive-fonts-recommended texlive-fonts-extra texlive-latex-extra

      - name: Build CV
        run: pdflatex -output-directory=dist cv/cv.tex

      - name: Upload CV artifact
        uses: actions/upload-artifact@v4
        with:
          name: cv-pdf
          path: './dist'

  build-site:
    # needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --prefer-offline

      - name: Build the app
        run: npm run build

      - name: Download CV artifact (if available)
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: cv-pdf
          path: './dist'

      - name: Upload combined artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

  deploy:
    needs: [build-site]
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Send Discord Notification
        run: |
          curl -H "Content-Type: application/json" \
            -X POST \
            -d '{
              "username": "GitHub Actions",
              "avatar_url": "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png",
              "embeds": [{
                "title": "✅ Deployment Successful",
                "description": "Your site was built and deployed from `${{ github.repository }}`.",
                "color": 5814783,
                "fields": [
                  { "name": "Branch", "value": "${{ github.ref_name }}", "inline": true },
                  { "name": "Commit", "value": "[${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})", "inline": true }
                ],
                "footer": { "text": "GitHub Actions • ${{ github.workflow }}" },
                "timestamp": "'$(date --utc +%Y-%m-%dT%H:%M:%SZ)'"
              }]
            }' \
            ${{ secrets.DISCORD_WEBHOOK }}

  notify-on-failure:
    if: always() && (needs.build-cv.result == 'failure' || needs.build-site.result == 'failure' || needs.deploy.result == 'failure')
    needs: [build-cv, build-site, deploy]
    runs-on: ubuntu-latest
    steps:
      - name: Send Discord Failure Notification
        run: |
          curl -H "Content-Type: application/json" \
            -X POST \
            -d '{
              "username": "GitHub Actions",
              "embeds": [{
                "title": "❌ Deployment Failed",
                "description": "Something went wrong in `${{ github.repository }}`",
                "color": 16711680,
                "footer": { "text": "GitHub Actions • ${{ github.workflow }}" },
                "timestamp": "'$(date --utc +%Y-%m-%dT%H:%M:%SZ)'"
              }]
            }' \
            ${{ secrets.DISCORD_WEBHOOK }}

