name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Set permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the code
      - name: Checkout
        uses: actions/checkout@v4

      # Step 2: Set up Node.js and install dependencies
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.19.0'

      - name: Install dependencies
        run: npm install

      # Step 3: Build the app using Vite
      - name: Build the app
        run: npm run build

      # Step 4: Configure Pages deployment
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # Step 5: Install LaTeX packages to build CV
      - name: Install pdflatex
        run: sudo apt-get install texlive-latex-base texlive-fonts-recommended texlive-fonts-extra texlive-latex-extra

      # Step 6: Build CV
      - name: Build CV
        run: pdflatex -output-directory=dist cv/cv.tex

      # Step 7: Upload the build output
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'  # Points to the directory containing the build output

      # Step 8: Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
